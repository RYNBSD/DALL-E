import React, { useState } from 'react'
import useSWR from "swr";

import { Loader, Card, FormField } from "../components/index";

const RenderCards = ({ data, title }) => {
  if (data?.length > 0) {
    return data?.map((post) => (
      <Card key={post._id} {...post} />
    ));
  }

  return (
    <h2 className='mt-5 font-bold text-[#6449FF] text-xl uppercase'>{ title }</h2>
  );
}

const Home = () => {

  const fetcher = (url) => fetch(url).then(res => res.json());
  const { data, isError, isLoading } = useSWR("https://dall-e-server-cgjs.onrender.com/api/v1/post/", fetcher);

  const [post, setPost] = useState({});
  const [searchText, setSearchText] = useState("");

  const handleSearchChange = (e) => {
    setSearchText(e.target.value)
    setPost(data?.data.filter(post => post.name.toLowerCase().includes(searchText.toLowerCase())));
  }

  return (
    <section className="max-w-7xl mx-auto">
      <div>
        <h1 className="font-extrabold text-[#222328] text-[32px]">The Community Showcase</h1>
        <p className="mt-2 text-[#666E75] text-[14px] max-w-[500px]">Browse through a collection of imaginative and visually stunning images generated by DALL-E AI</p>
      </div>
      <div className="mt-16">
        <FormField
          labelName="Search posts"
          type="text"
          name="text"
          placeholder="Search something..."
          value={searchText}
          handleChange={handleSearchChange}
        />
      </div>
      <div className='mt-10'>
        {
          isLoading ? (
            <div className='flex justify-center items-center'>
              <Loader />
            </div>
          ) : (
            <>
              {
                searchText && (
                  <h2 className='font-medium text-[#666E75] text-xl mb-3'>
                    Showing results for <span className='text-[#222328]'>
                      { searchText }
                    </span>
                  </h2>
                )
              }
              <div className='grid lg:grid-cols-4 sm:grid-cols-3 xs:grid-cols-2 grid-cols-1 gap-3'>
                {
                  searchText ? (
                    <RenderCards
                      data={post}
                      title="No search results found"
                    />
                  ) : (
                    <RenderCards
                      data={data?.data}
                      title="No posts found"
                    />                  
                  )
                }
              </div>
            </>
          )
        }
      </div>
    </section>
  )
}

export default Home
